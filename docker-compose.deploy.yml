# Copyright (c) 2022, 2023 Humanitarian OpenStreetMap Team
# This file is part of FMTM.
#
#     FMTM is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     FMTM is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with FMTM.  If not, see <https:#www.gnu.org/licenses/>.
#

version: "3"

volumes:
  fmtm_db_data:
  central_db_data:
  traefik-public-certificates:

networks:
  fmtm-net:
    name: fmtm-${GIT_BRANCH}

services:
  traefik:
    image: "docker.io/traefik:v2.8"
    container_name: fmtm_proxy
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik-public-certificates:/certificates"
    ports:
      - 80:80
      - 443:443
    networks:
      - fmtm-net
    restart: unless-stopped
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@hotosm.org"
      - "--certificatesresolvers.letsencrypt.acme.storage=/certificates/acme.json"
      ## Enable below for staging tests
      # - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=fmtm-${GIT_BRANCH}"
      - "traefik.api.dashboard=false"
      - "traefik.http.middlewares.https_redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https_redirect.redirectscheme.permanent=true"
      - "traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`) && !PathPrefix(`/.well-known/acme-challenge/`)"
      - "traefik.http.routers.http_catchall.entrypoints=web"
      - "traefik.http.routers.http_catchall.middlewares=https_redirect"

  fmtm-db:
    image: "postgis/postgis:14-3.3-alpine"
    container_name: fmtm_db
    volumes:
      - fmtm_db_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${FMTM_DB_USER:-fmtm}
      - POSTGRES_PASSWORD=${FMTM_DB_PASSWORD:-fmtm}
      - POSTGRES_DB=${FMTM_DB_NAME:-fmtm}
    ports:
      - "5432:5432"
    networks:
      - fmtm-net
    restart: unless-stopped

  api:
    image: "ghcr.io/hotosm/fmtm/backend:0.1.0-${GIT_BRANCH}"
    build:
      context: src/backend
      target: prod
    container_name: fmtm_api
    depends_on:
      - fmtm-db
      - central-proxy
      - traefik
    env_file:
      - .env
    networks:
      - fmtm-net
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.routers.api.rule=Host(`${API_URL}`)"
      - "traefik.http.services.api-svc.loadbalancer.server.port=8000"
      - "traefik.http.routers.api.service=api-svc"

  ui-main:
    image: "ghcr.io/hotosm/fmtm/frontend/main:0.1.0-${GIT_BRANCH}"
    build:
      context: src/frontend/main
      args:
        APP_NAME: main
        URL_SCHEME: ${URL_SCHEME}
        API_URL: ${API_URL}
        FRONTEND_MAIN_URL: ${FRONTEND_MAIN_URL}
        FRONTEND_MAP_URL: ${FRONTEND_MAP_URL}
    container_name: fmtm_main
    depends_on:
      - api
      - traefik
    networks:
      - fmtm-net
    environment:
      - BROTLI=true
      - API_URL=${URL_SCHEME}://${API_URL}
      - FRONTEND_MAIN_URL=${URL_SCHEME}://${FRONTEND_MAIN_URL}
      - FRONTEND_MAP_URL=${URL_SCHEME}://${FRONTEND_MAP_URL}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ui-main.tls=true"
      - "traefik.http.routers.ui-main.tls.certresolver=letsencrypt"
      - "traefik.http.routers.ui-main.rule=Host(`${FRONTEND_MAIN_URL}`)"
      - "traefik.http.services.ui-main-svc.loadbalancer.server.port=8080"
      - "traefik.http.routers.ui-main.service=ui-main-svc"

  ui-map:
    image: "ghcr.io/hotosm/fmtm/frontend/map:0.1.0-${GIT_BRANCH}"
    build:
      context: src/frontend/fmtm_openlayer_map
      args:
        APP_NAME: fmtm_openlayer_map
        URL_SCHEME: ${URL_SCHEME}
        API_URL: ${API_URL}
        FRONTEND_MAIN_URL: ${FRONTEND_MAIN_URL}
        FRONTEND_MAP_URL: ${FRONTEND_MAP_URL}
    container_name: fmtm_map
    depends_on:
      - api
      - traefik
    networks:
      - fmtm-net
    environment:
      - BROTLI=true
      - API_URL=${URL_SCHEME}://${API_URL}
      - FRONTEND_MAIN_URL=${URL_SCHEME}://${FRONTEND_MAIN_URL}
      - FRONTEND_MAP_URL=${URL_SCHEME}://${FRONTEND_MAP_URL}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ui-map.tls=true"
      - "traefik.http.routers.ui-map.tls.certresolver=letsencrypt"
      - "traefik.http.routers.ui-map.rule=Host(`${FRONTEND_MAP_URL}`)"
      - "traefik.http.services.ui-map-svc.loadbalancer.server.port=8080"
      - "traefik.http.routers.ui-map.service=ui-map-svc"

  central-db:
    image: postgis/postgis:14-3.3-alpine
    container_name: central_db
    volumes:
      - central_db_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${CENTRAL_DB_USER:-odk}
      - POSTGRES_PASSWORD=${CENTRAL_DB_PASSWORD:-odk}
      - POSTGRES_DB=${CENTRAL_DB_NAME:-odk}
    networks:
      - fmtm-net
    restart: unless-stopped

  central:
    image: "ghcr.io/hotosm/fmtm/odkcentral:${ODK_CENTRAL_VERSION}-${GIT_BRANCH}"
    build:
      context: odkcentral/api
      args:
        ODK_CENTRAL_VERSION: ${ODK_CENTRAL_VERSION}
    container_name: central_api
    depends_on:
      - central-db
      - pyxform
    environment:
      - DOMAIN=local
      - SYSADMIN_EMAIL=${ODK_CENTRAL_USER}
      - HTTPS_PORT=${HTTPS_PORT:-443}
      - DB_HOST=${CENTRAL_DB_HOST:-postgres14}
      - DB_USER=${CENTRAL_DB_USER:-odk}
      - DB_PASSWORD=${CENTRAL_DB_PASSWORD:-odk}
      - DB_NAME=${CENTRAL_DB_NAME:-odk}
      - DB_SSL=${DB_SSL:-null}
      - EMAIL_FROM=${ODK_CENTRAL_USER}
      - EMAIL_HOST=${EMAIL_HOST:-mail}
      - EMAIL_PORT=${EMAIL_PORT:-25}
      - EMAIL_SECURE=${EMAIL_SECURE:-false}
      - EMAIL_IGNORE_TLS=${EMAIL_IGNORE_TLS:-true}
      - EMAIL_USER=${EMAIL_USER:-''}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD:-''}
      - SENTRY_ORG_SUBDOMAIN=${SENTRY_ORG_SUBDOMAIN:-o130137}
      - SENTRY_KEY=${SENTRY_KEY:-3cf75f54983e473da6bd07daddf0d2ee}
      - SENTRY_PROJECT=${SENTRY_PROJECT:-1298632}
    networks:
      - fmtm-net
    command:
      [
        "./wait-for-it.sh",
        "${CENTRAL_DB_HOST:-central-db}:5432",
        "--",
        "./init-user-and-start.sh",
      ]
    restart: unless-stopped

  central-proxy:
    image: "ghcr.io/hotosm/fmtm/odkcentral-proxy:0.1.0-${GIT_BRANCH}"
    build:
      context: odkcentral/proxy
    container_name: central_proxy
    depends_on:
      - central
    networks:
      - fmtm-net
    restart: unless-stopped

  pyxform:
    image: "ghcr.io/getodk/pyxform-http:v1.10.1.1"
    container_name: central_pyxform
    networks:
      - fmtm-net
    restart: always
